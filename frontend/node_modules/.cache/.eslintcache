[{"/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/index.js":"1","/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/reportWebVitals.js":"2","/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/App.js":"3","/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/pages/Home.js":"4"},{"size":535,"mtime":1697726107735,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1697726107736,"results":"7","hashOfConfig":"6"},{"size":161,"mtime":1697726362771,"results":"8","hashOfConfig":"6"},{"size":3063,"mtime":1697726503440,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3yjy2r",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/index.js",[],[],"/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/reportWebVitals.js",[],[],"/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/App.js",[],[],"/home/fouadzrb/School/QwestTV*/FrontEnd/frontend/src/pages/Home.js",["23"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nexport default function Home() {\r\n  const [data, setData] = useState();\r\n  const [ext,setExt]= useState(\"csv\")\r\n  const [fileName,setFileName] = useState()\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3000/file/list`).then((res) => {\r\n      const files = res.data;\r\n      setData(files.data);\r\n      console.log(data);\r\n    });\r\n  }, [data]);\r\n  //console.log(data?.files.data);\r\n  const deleteFile = (file) => {\r\n    axios.delete(`http://localhost:3000/file/delete/${file}`).then((res) => {\r\n        const files = res.data;\r\n        console.log(files);\r\n        setData(oldata=>oldata.filter(item =>item !== file))\r\n      });  \r\n      \r\n    };\r\n  const telecharger = (file)=>{\r\n    var [fileName,ext] = file.split(\".\");    \r\n    axios.get(`http://localhost:3000/file/download/${file}`,{responseType: 'blob'}).then((res) => {\r\n        const files = res.data;\r\n        const href = window.URL.createObjectURL(res.data);\r\n\r\n      const anchorElement = document.createElement('a');\r\n\r\n      anchorElement.href = href;\r\n      anchorElement.download = fileName;\r\n\r\n      document.body.appendChild(anchorElement);\r\n      anchorElement.click();\r\n\r\n      document.body.removeChild(anchorElement);\r\n      window.URL.revokeObjectURL(href);\r\n        console.log(files);\r\n      });\r\n  }\r\n  const handleChange = (event)=>{\r\n     setExt(event.target.value)\r\n     console.log(ext)\r\n  }\r\n\r\n  const addfile= ()=>{\r\n   axios.get(`http://localhost:3000/file/create/${fileName}/${ext}`).then((res) => {\r\n        const files = res.data;\r\n        setData(oldata=>[...oldata,files.data])\r\n        document.getElementById(\"fileName\").value = \"\";\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n    <section>\r\n      <Table>\r\n        <tbody>\r\n          { data?.map((files) => (\r\n            <>\r\n              <tr key={files}>\r\n              <td>{files}</td>\r\n          <td><button\r\n                onClick={() => {\r\n                    deleteFile(files)\r\n                }}\r\n              >\r\n                {\" \"}\r\n                delete\r\n              </button></td>\r\n              <td><button\r\n                onClick={() => {\r\n                    telecharger(files)\r\n                }}\r\n              >\r\n                {\" \"}\r\n                 telecharger\r\n              </button></td>\r\n          </tr>\r\n              \r\n            </>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      </section>\r\n      <section>\r\n        <dev>\r\n        <label for=\"fileName\" >file Name </label>\r\n        <input type=\"text\" id=\"fileName\" onChange={ (e) => setFileName(e.target.value)} />\r\n        </dev>\r\n        <dev>\r\n            <select value={ext} onChange={handleChange}>\r\n                <option value=\"csv\" selected>csv</option>\r\n                <option value=\"xml\">xml</option>\r\n                <option value=\"excel\">excel</option>\r\n            </select>\r\n        </dev>\r\n        <button onClick={addfile}  >Add new </button>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"24","severity":1,"message":"25","line":26,"column":19,"nodeType":"26","messageId":"27","endLine":26,"endColumn":22},"no-unused-vars","'ext' is assigned a value but never used.","Identifier","unusedVar"]